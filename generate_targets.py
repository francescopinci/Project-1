#!/usr/bin/env python2

from hashlib import sha256
import StringIO
import sys
import zipfile

UNMODIFIED_ID_HASH = '0489dd1d8cd6207044bea555dc72fe017e1c57a2f9c7a7a9a19b7cfb234599dd'
TEMPLATES = {
    'targets/target1.c': 100,
    'targets/target2.c': 100,
    'targets/target3.c': 100,
    'targets/target4.cc': 32,
    'targets/target5.c': 100,
    'targets/target6.c': 1000,
}

def main():
    # Get the hash of the ID.
    with open('ID', 'r') as f:
        ID = f.read()
    if sha256(ID).hexdigest() == UNMODIFIED_ID_HASH:
        sys.exit('You must fill out the `ID` file before generating targets.')
    zf = zipfile.ZipFile(StringIO.StringIO(TARGETS.replace('\n', '').decode('base64')), 'r')
    for zi in zf.infolist():
        if zi.filename in TEMPLATES:
            md = sha256(zi.filename)
            md.update(b'\0')
            md.update(ID)
            val = str((TEMPLATES[zi.filename] + ord(md.digest()[0])) & ~3)
            with open(zi.filename, 'w') as f:
                template = zf.open(zi).read()
                f.write(template.replace('REPLACE_ME', val))
        else:
            zf.extract(zi)
    print 'The targets directory has been created.'
    print 'WARNING: If you modify `ID` and do not rerun this script and fix all of your sploits,'
    print 'WARNING: then when you submit, your sploits are likely to fail.'


TARGETS = '''
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
'''

if __name__ == '__main__':
    exit(main())

